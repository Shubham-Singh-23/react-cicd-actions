name: hourly-build-checking
on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

env:
  GB_BART_MAVEN_ID: ${{ secrets.DOCKER_ID }}
  GB_BART_MAVEN_PW: ${{ secrets.DOCKER_API_PASSWORD }}
  GITHUB_SECRET: ${{ secrets.CICD_AUTOMATION_TOKEN }}
  URL: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID

jobs:
  hourly-build-feature:
    runs-on: [code-linux, code-2xlarge ]
    container:
      image: ${{ vars.DOCKER_IMAGE_SDK36 }}
      credentials:
        username: ${{ secrets.DOCKER_ID }}
        password: ${{ secrets.DOCKER_API_PASSWORD }}
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}

    steps:
      - uses: CODE-Actions/checkout-retry@v4
        with:
          github-server-url: ${{ vars.CACHE_SERVER }}
      
      - name: Extract branch name
        if: always()
        shell: bash
        run: echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> "$GITHUB_OUTPUT"
        id: extract_branch
        
      - uses: CODE-Actions/checkout-retry@v4
        with:
          token: ${{ secrets.CICD_AUTOMATION_TOKEN }}
          github-server-url: ${{ vars.CACHE_SERVER }}
          repository: "samsung-health/test-health"
          sparse-checkout: |
            messenger
          path: test-health
          ref: main

      - name: building release apk
        run:  |
          chmod +x run_github_setup.sh
          ./run_github_setup.sh
          ./gradlew --parallel --max-workers=5 :App:assembleGlobalDebug :App:assembleGlobalRelease :App:assembleChinaRelease  assembleGlobalDebugAndroidTest -Psanity > buildLog/build_out.txt 2> buildLog/build_err.txt
      - name: failure notifier
        if: always()
        run: |
          python3 test-health/messenger/build_failure_notifier.py buildLog/build_err.txt "hourly-build-feature" ${{ env.URL }} ${{ steps.extract_branch.outputs.branch }} "wear"
      - name: Archive apk
        uses: CODE-Actions/upload-artifact@v3
        with:
          name: output apk path
          path: app/build/outputs/apk
          
      - name: Mapping
        uses: CODE-Actions/upload-artifact@v3
        with:
          name: apk mapping
          path: app/build/outputs/mapping

      - name: Upload build log
        if: always()
        uses: CODE-Actions/upload-artifact@v3
        with:
          name: BuildLog
          path: |
            buildLog
  automation-build-feature:
    runs-on: [code-linux, code-2xlarge ]
    container:
      image: ${{ vars.DOCKER_IMAGE_SDK36 }}
      credentials:
        username: ${{ secrets.DOCKER_ID }}
        password: ${{ secrets.DOCKER_API_PASSWORD }}
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}

    steps:
      - uses: CODE-Actions/checkout-retry@v4
        with:
          github-server-url: ${{ vars.CACHE_SERVER }}
      
      - name: Extract branch name
        if: always()
        shell: bash
        run: echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> "$GITHUB_OUTPUT"
        id: extract_branch
        
      - uses: CODE-Actions/checkout-retry@v4
        with:
          token: ${{ secrets.CICD_AUTOMATION_TOKEN }}
          github-server-url: ${{ vars.CACHE_SERVER }}
          repository: "samsung-health/test-health"
          sparse-checkout: |
            messenger
          path: test-health
          ref: main

      - name: building release apk
        run:  |
          chmod +x run_github_setup.sh
          ./run_github_setup.sh
          ./gradlew --parallel --max-workers=5  :App:assembleGlobalRelease  :App:assembleAutomationtestRelease -Pautomationtest > buildLog/build_out.txt 2> buildLog/build_err.txt
      - name: Archive apk
        uses: CODE-Actions/upload-artifact@v3
        with:
          name: output automation apk path
          path: app/build/outputs/apk

      - name: failure notifier
        if: always()
        run: |
          python3 test-health/messenger/build_failure_notifier.py buildLog/build_err.txt "automation-build-feature" ${{ env.URL }} ${{ steps.extract_branch.outputs.branch }} "wear"
      - name: Mapping
        uses: CODE-Actions/upload-artifact@v3
        with:
          name: automation apk mapping
          path: app/build/outputs/mapping

      - name: Upload build log
        if: always()
        uses: CODE-Actions/upload-artifact@v3
        with:
          name: Automation BuildLog
          path: |
            buildLog
